name: Publish

on:
  workflow_dispatch:
    inputs:
      should-publish:
        type: boolean
        description: "Do you want to publish the library?"
        default: false
        required: true

      release-version:
        type: string
        description: "Specify the version to release"
        required: true

jobs:
  build-and-publish:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Check Gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Set Version Name
        run: |
          sed -i '' 's/^VERSION_NAME=.*/VERSION_NAME=1.3.4/' gradle.properties
        env:
          RELEASE_VERSION: ${{ github.event.inputs.release-version }}

      - name: Do Clean
        run: ./gradlew clean

      - name: üöÄ Publish KotlinMultiplatform Library to Maven Central
        if: always() && (github.event.inputs.should-publish == 'true')
        run: ./gradlew publish --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          RELEASE_VERSION: ${{ github.event.inputs.release-version }}

      - name: üî®Assemble
        if: always() && (github.event.inputs.should-publish == 'true')
        run: ./gradlew :mvicompose:assemble
        env:
          RELEASE_VERSION: ${{ github.event.inputs.release-version }}

      - name: ‚öôÔ∏è Create Release
        if: always() && (github.event.inputs.should-publish == 'true')
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="v${{ github.event.inputs.release-version }}" \
              --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ github.event.inputs.release-version }}
          RELEASE_VERSION: ${{ github.event.inputs.release-version }}